quarkus.config.locations=/deployments/config

quarkus.swagger-ui.always-include=true
quarkus.http.cors=true
quarkus.http.cors.origins=*

################     Logging
quarkus.log.level=INFO
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=DEBUG
quarkus.log.console.color=false
###########################################


########## Kubernetes / Helm

# io.quarkus:quarkus-openshift plugin defaults to S2I to build images
# So as to avoid the need for a running OCP environment to build container images, over-ride this behavior by specifying use of docker/podman to build images
quarkus.container-image.builder=docker

quarkus.container-image.registry: quay.io
quarkus.container-image.group: redhat_naps_da

quarkus.kubernetes.deployment-target=openshift
quarkus.openshift.resources.limits.cpu: 1
quarkus.openshift.resources.limits.memory: 1024Mi
quarkus.openshift.resources.requests.cpu: 250m
quarkus.openshift.resources.requests.memory: 64Mi
quarkus.openshift.mounts.config.path: /deployments/config
quarkus.openshift.config-map-volumes.config.config-map-name: djl-objectdetect-web
quarkus.openshift.config-map-volumes.config.default-mode: 420
quarkus.openshift.config-map-volumes.config.items."application.properties".path: application.properties

quarkus.openshift.ports.http.host-port: 8080

quarkus.helm.enabled: true
quarkus.helm.create-tar-file: true


######  Quinoa
quarkus.quinoa.package-manager-install=true
quarkus.quinoa.dev-server.port=3000
quarkus.quinoa.package-manager-install.node-version=18.15.0

########        messaging       ############
mp.messaging.incoming.liveObjectDetection.connector=smallrye-mqtt

# Set to 1MB to accomodate webcam images
mp.messaging.incoming.liveObjectDetection.max-message-size=1024000

############################################
