<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.acme</groupId>
    <artifactId>djl-iclassification</artifactId>
    <version>0.0.3</version>
    <properties>
        <compiler-plugin.version>3.8.1</compiler-plugin.version>
        <maven.compiler.release>11</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
        <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
        <quarkus.platform.version>2.14.0.Final</quarkus.platform.version>
        <surefire-plugin.version>3.0.0-M5</surefire-plugin.version>
        <djl.version>0.20.0</djl.version>
    </properties>

    <repositories>
        <repository>
            <id>djl.ai</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>

            <!-- https://mvnrepository.com/artifact/ai.djl/bom/0.20.0 -->
            <dependency>
                <groupId>ai.djl</groupId>
                <artifactId>bom</artifactId>
                <version>${djl.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            
            <dependency>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>${quarkus.platform.artifact-id}</artifactId>
                <version>${quarkus.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy-reactive</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy-reactive-jackson</artifactId>
        </dependency>

        <!-- Expose service endpoints through Swagger/OpenAPI -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-smallrye-openapi</artifactId>
        </dependency>

        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-smallrye-health</artifactId>
        </dependency>

        <!--
        $ ./mvnw clean package \
                -Ptensorflow \
                -Dquarkus.application.name=djl-iclassification-tensorflow \
                -DskipTests \
                -Dquarkus.container-image.build=true \
                -Dquarkus.container-image.push=true                             :   Build container image (using docker/podman) and push container image to repo
        -->
      <dependency>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-container-image-docker</artifactId>
      </dependency>
      <dependency>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-openshift</artifactId>
      </dependency>

      <dependency>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-kubernetes-config</artifactId>
      </dependency>

      <!--
        $ helm install djl-iclassification ./target/helm/openshift/djl-iclassification        :   deploy helm configured artifacts to OCP
      -->
      <dependency>
        <groupId>io.quarkiverse.helm</groupId>
        <artifactId>quarkus-helm</artifactId>
        <version>0.2.0</version>
      </dependency>

        <dependency>
            <!-- This is required for quarkus native-image generation, not sure why -->
            <groupId>io.netty</groupId>
            <artifactId>netty-tcnative</artifactId>
            <version>2.0.31.Final</version>
        </dependency>
        <dependency>
            <!-- GraalVM doesn't work with ImageIO, use apache commons imaging instead -->
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-imaging</artifactId>
            <version>1.0-alpha1</version>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
      <plugin>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.platform.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>
        </plugins>
    </build>
    <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <systemPropertyVariables>
                    <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                    <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                    <maven.home>${maven.home}</maven.home>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <quarkus.package.type>native</quarkus.package.type>
      </properties>
    </profile>
        <profile>
            <id>pytorch</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>ai.djl.pytorch</groupId>
                    <artifactId>pytorch-model-zoo</artifactId>
                </dependency>
                <dependency>
                    <groupId>ai.djl.pytorch</groupId>
                    <artifactId>pytorch-engine</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>

            <!-- http://djl.ai/engines/mxnet/mxnet-engine/ -->
            <id>mxnet</id>

            <dependencies>
                <dependency>
                    <groupId>ai.djl.mxnet</groupId>
                    <artifactId>mxnet-model-zoo</artifactId>
                </dependency>
                <dependency>
                    <groupId>ai.djl.mxnet</groupId>
                    <artifactId>mxnet-native-cu112mkl</artifactId>
                    <classifier>linux-x86_64</classifier>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>tensorflow</id>
            <dependencies>
                <dependency>
                    <groupId>org.bytedeco</groupId>
                    <artifactId>javacpp</artifactId>
                    <!-- Only 1.5.4 works with GraalVM -->
                    <version>1.5.4</version>
                </dependency>
                <dependency>
                    <groupId>org.bytedeco</groupId>
                    <artifactId>javacpp</artifactId>
                    <version>1.5.4</version>
                    <classifier>linux-x86_64</classifier>
                </dependency>
                <dependency>
                    <groupId>com.google.protobuf</groupId>
                    <artifactId>protobuf-java</artifactId>
                    <!-- Why this get downgraded to 3.6.1 by default? -->
                    <version>3.16.3</version>
                </dependency>
                <dependency>
                    <groupId>ai.djl.tensorflow</groupId>
                    <artifactId>tensorflow-native-cu113</artifactId>
                    <classifier>linux-x86_64</classifier>
                </dependency>
                <dependency>
                    <groupId>ai.djl.tensorflow</groupId>
                    <artifactId>tensorflow-model-zoo</artifactId>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
