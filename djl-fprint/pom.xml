<?xml version="1.0"?>
<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>    
      <groupId>com.redhat.na.ssa</groupId>
      <artifactId>djl-intro-parent</artifactId>
      <version>0.0.1</version>
      <relativePath>../pom.xml</relativePath>
  </parent>
  <groupId>com.redhat.na.ssa</groupId>
  <artifactId>djl-fprint</artifactId>
  <version>0.0.1</version>

  <dependencies>
    <dependency>
      <groupId>com.redhat.na.ssa</groupId>
      <artifactId>djl-base</artifactId>
      <version>0.0.1</version>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-arc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-reactive-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-reactive</artifactId>
    </dependency>

    <!-- kafka -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-reactive-messaging-kafka</artifactId>
    </dependency>


    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-openshift</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-openapi</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-kubernetes-config</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-container-image-docker</artifactId>
    </dependency>

    <!--
        $ helm install djl-fprint-tensorflow-cpu ./target/helm/openshift/djl-fprint-tensorflow-cpu        :   deploy helm
    configured artifacts to OCP
      -->
    <dependency>
      <groupId>io.quarkiverse.helm</groupId>
      <artifactId>quarkus-helm</artifactId>
      <version>0.2.0</version>
    </dependency>

    <dependency>
      <!-- GraalVM doesn't work with ImageIO, use apache commons imaging instead -->
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-imaging</artifactId>
      <version>1.0-alpha1</version>
    </dependency>
    <!--dependency>
      <groupId>ai.djl.opencv</groupId>
      <artifactId>opencv</artifactId>
    </dependency-->

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-test-kafka-companion</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.platform.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <systemPropertyVariables>
                <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                <maven.home>${maven.home}</maven.home>
              </systemPropertyVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <properties>
        <skipITs>false</skipITs>
        <quarkus.package.type>native</quarkus.package.type>
      </properties>
    </profile>
    <profile>
      <id>tensorflow-cpu</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <!--dependency>
          <groupId>org.bytedeco</groupId>
          <artifactId>javacpp</artifactId>
          <version>1.5.4</version>
        </dependency>
        <dependency>
          <groupId>org.bytedeco</groupId>
          <artifactId>javacpp</artifactId>
          <version>1.5.4</version>
          <classifier>linux-x86_64</classifier>
        </dependency-->
        <dependency>
          <groupId>com.google.protobuf</groupId>
          <artifactId>protobuf-java</artifactId>
          <!-- Why this get downgraded to 3.6.1 by default? -->
          <version>3.16.3</version>
        </dependency>
        <dependency>
          <groupId>ai.djl.tensorflow</groupId>
          <artifactId>tensorflow-model-zoo</artifactId>
        </dependency>

        <!-- Use when building for CPU -->
        <dependency>
          <groupId>ai.djl.tensorflow</groupId>
          <artifactId>tensorflow-native-cpu</artifactId>
          <classifier>linux-x86_64</classifier>
          <scope>runtime</scope>
          <version>2.7.0</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>tensorflow-gpu</id>
      <dependencies>
        <dependency>
          <groupId>org.bytedeco</groupId>
          <artifactId>javacpp</artifactId>
          <!-- Only 1.5.4 works with GraalVM -->
          <version>1.5.4</version>
        </dependency>
        <dependency>
          <groupId>org.bytedeco</groupId>
          <artifactId>javacpp</artifactId>
          <version>1.5.4</version>
          <classifier>linux-x86_64</classifier>
        </dependency>
        <dependency>
          <groupId>com.google.protobuf</groupId>
          <artifactId>protobuf-java</artifactId>
          <!-- Why this get downgraded to 3.6.1 by default? -->
          <version>3.16.3</version>
        </dependency>
        <dependency>
          <groupId>ai.djl.tensorflow</groupId>
          <artifactId>tensorflow-model-zoo</artifactId>
        </dependency>

        <!-- Use when building for GPU -->
        <dependency>
            <groupId>ai.djl.tensorflow</groupId>
            <artifactId>tensorflow-native-cu113</artifactId>
            <classifier>linux-x86_64</classifier>
            <scope>runtime</scope>
            <version>2.7.0</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
